{"version":3,"sources":["../src/cli.js"],"names":["handleOutput","message","json","JSON","stringify","result","join","console","log","copy","Promise","resolve","version","description","usage","option","module","exports","parse","argv","then","catch","error","err","url","args","shift","process","cwd"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,SAAU;AAC7B,MAAMC,UAAU,oBAAQC,IAAR,GAAeC,KAAKC,SAAL,CAAeC,MAAf,CAAf,GAAwCA,OAAOC,IAAP,CAAY,MAAZ,CAAxD;;AAEAC,UAAQC,GAAR,CAAYP,OAAZ;;AAEA,SAAO,oBAAQQ,IAAR,GAAe,qCAAWR,OAAX,CAAf,GAAqCS,QAAQC,OAAR,EAA5C;AACD,CAND;;AAQA,oBAAQC,OAAR,CAAgB,kBAAIA,OAApB,EACGC,WADH,CACe,wCADf,EAEGC,KAFH,CAES,kBAFT,EAGGC,MAHH,CAGU,qBAHV,EAGiC,sCAHjC,EAIGA,MAJH,CAIU,iBAJV,EAI6B,iCAJ7B,EAKGA,MALH,CAKU,YALV,EAKwB,kCALxB,EAMGA,MANH,CAMU,YANV,EAMwB,wCANxB;;AAQAC,OAAOC,OAAP,GAAiB,gBAAQ;AACvB,sBACGC,KADH,CACSC,IADT;;AAGA,MAAI,oBAAQH,MAAZ,EAAoB;AAClB,WAAO,iBAAU,oBAAQA,MAAlB,EACJI,IADI,CACCpB,YADD,EAEJqB,KAFI,CAEE;AAAA,aAAOd,QAAQe,KAAR,CAAc,oDAAd,EAAoEC,GAApE,CAAP;AAAA,KAFF,CAAP;AAGD;;AAED,MAAI,oBAAQC,GAAZ,EAAiB;AACf,WAAO,gBAAS,oBAAQA,GAAjB,EACJJ,IADI,CACCpB,YADD,EAEJqB,KAFI,CAEE;AAAA,aAAOd,QAAQe,KAAR,CAAc,oDAAd,EAAoEC,GAApE,CAAP;AAAA,KAFF,CAAP;AAGD;;AAED,SAAO,iBAAU,oBAAQE,IAAR,CAAaC,KAAb,MAAwBC,QAAQC,GAAR,EAAlC,EACJR,IADI,CACCpB,YADD,EAEJqB,KAFI,CAEE;AAAA,WAAOd,QAAQe,KAAR,CAAc,kCAAd,EAAkDC,GAAlD,CAAP;AAAA,GAFF,CAAP;AAGD,CAnBD","file":"cli.js","sourcesContent":["import program from 'commander';\r\nimport pkg from './../package.json';\r\nimport pify from 'pify';\r\nimport {copy} from 'copy-paste';\r\nimport {getByName, getByFile, getByUrl} from './';\r\n\r\nconst handleOutput = result => {\r\n  const message = program.json ? JSON.stringify(result) : result.join('\\n\\r');\r\n\r\n  console.log(message);\r\n\r\n  return program.copy ? pify(copy)(message) : Promise.resolve();\r\n};\r\n\r\nprogram.version(pkg.version)\r\n  .description('Get the dependencies of a package.json')\r\n  .usage('[options] [path]')\r\n  .option('-m, --module <name>', 'Get the package.json of a npm module')\r\n  .option('-u, --url <url>', 'Get the package.json from a url')\r\n  .option('-j, --json', 'Print the dependencies as a JSON')\r\n  .option('-c, --copy', 'Copy the dependencies to the clipboard');\r\n\r\nmodule.exports = argv => {\r\n  program\r\n    .parse(argv);\r\n\r\n  if (program.module) {\r\n    return getByName(program.module)\r\n      .then(handleOutput)\r\n      .catch(err => console.error('Could not retrieve the requested package.json file', err));\r\n  }\r\n\r\n  if (program.url) {\r\n    return getByUrl(program.url)\r\n      .then(handleOutput)\r\n      .catch(err => console.error('Could not retrieve the requested package.json file', err));\r\n  }\r\n\r\n  return getByFile(program.args.shift() || process.cwd())\r\n    .then(handleOutput)\r\n    .catch(err => console.error('Could not read the required file', err));\r\n};\r\n"]}